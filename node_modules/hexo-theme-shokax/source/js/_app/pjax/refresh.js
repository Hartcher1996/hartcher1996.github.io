"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.siteRefresh = exports.pjaxReload = void 0;
const dom_1 = require("../library/dom");
const common_1 = require("../page/common");
const post_1 = require("../page/post");
const anime_1 = require("../library/anime");
const loadFile_1 = require("../library/loadFile");
const scriptPjax_1 = require("../library/scriptPjax");
const handles_1 = require("../globals/handles");
const globalVars_1 = require("../globals/globalVars");
const player_1 = require("../player");
const tools_1 = require("../globals/tools");
const sidebar_1 = require("../components/sidebar");
const thirdparty_1 = require("../globals/thirdparty");
const tab_1 = require("../page/tab");
const pjaxReload = () => {
    (0, tools_1.pagePosition)();
    if (globalVars_1.sideBar.hasClass('on')) {
        (0, anime_1.transition)(globalVars_1.sideBar, 0, () => {
            globalVars_1.sideBar.removeClass('on');
            globalVars_1.menuToggle.removeClass('close');
        });
    }
    const mainNode = (0, dom_1.$dom)('#main');
    mainNode.innerHTML = '';
    mainNode.appendChild(globalVars_1.loadCat.lastChild.cloneNode(true));
    (0, anime_1.pageScroll)(0);
};
exports.pjaxReload = pjaxReload;
const siteRefresh = (reload) => {
    (0, globalVars_1.setLocalHash)(0);
    (0, globalVars_1.setLocalUrl)(window.location.href);
    (0, loadFile_1.vendorCss)('katex');
    (0, loadFile_1.vendorJs)('copy_tex');
    (0, loadFile_1.vendorCss)('mermaid');
    (0, loadFile_1.vendorJs)('chart');
    if (reload !== 1) {
        dom_1.$dom.each('script[data-pjax]', scriptPjax_1.pjaxScript);
    }
    (0, globalVars_1.setOriginTitle)(document.title);
    (0, handles_1.resizeHandle)();
    (0, sidebar_1.menuActive)();
    (0, sidebar_1.sideBarTab)();
    (0, sidebar_1.sidebarTOC)();
    (0, common_1.registerExtURL)();
    (0, post_1.postBeauty)();
    (0, tab_1.tabFormat)();
    if (typeof player_1.mediaPlayer !== 'undefined') {
        globalVars_1.toolPlayer.player.load(LOCAL.audio || CONFIG.audio || {});
    }
    thirdparty_1.Loader.hide();
    setTimeout(() => {
        (0, tools_1.positionInit)();
    }, 500);
    (0, common_1.cardActive)();
    thirdparty_1.lazyload.observe();
    (0, thirdparty_1.isOutime)();
};
exports.siteRefresh = siteRefresh;

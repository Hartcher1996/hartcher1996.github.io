"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initVue = void 0;
const storage_1 = require("./storage");
const anime_1 = require("./anime");
const dom_1 = require("./dom");
const globalVars_1 = require("../globals/globalVars");
const themeColor_1 = require("../globals/themeColor");
function initVue() {
    Vue.createApp({
        data() {
            return {};
        },
        methods: {
            changeThemeByBtn() {
                let c;
                const btn = (0, dom_1.$dom)('.theme').child('.ic');
                const neko = globalVars_1.BODY.createChild('div', {
                    id: 'neko',
                    innerHTML: '<div class="planet"><div class="sun"></div><div class="moon"></div></div><div class="body"><div class="face"><section class="eyes left"><span class="pupil"></span></section><section class="eyes right"><span class="pupil"></span></section><span class="nose"></span></div></div>'
                });
                const hideNeko = () => {
                    (0, anime_1.transition)(neko, {
                        delay: 2500,
                        opacity: 0
                    }, () => {
                        globalVars_1.BODY.removeChild(neko);
                    });
                };
                if (btn.hasClass('i-sun')) {
                    c = () => {
                        neko.addClass('dark');
                        (0, themeColor_1.changeTheme)('dark');
                        storage_1.$storage.set('theme', 'dark');
                        hideNeko();
                    };
                }
                else {
                    neko.addClass('dark');
                    c = () => {
                        neko.removeClass('dark');
                        (0, themeColor_1.changeTheme)();
                        storage_1.$storage.set('theme', 'light');
                        hideNeko();
                    };
                }
                (0, anime_1.transition)(neko, 1, () => {
                    setTimeout(c, 210);
                }, () => {
                    neko.display('block');
                });
            }
        }
    }).mount('#rightNav');
}
exports.initVue = initVue;

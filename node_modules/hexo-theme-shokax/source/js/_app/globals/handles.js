"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.visibilityListener = exports.clickMenu = exports.scrollHandle = exports.resizeHandle = void 0;
const sidebar_1 = require("../components/sidebar");
const dom_1 = require("../library/dom");
const globalVars_1 = require("./globalVars");
const themeColor_1 = require("./themeColor");
const thirdparty_1 = require("./thirdparty");
const resizeHandle = () => {
    (0, globalVars_1.setSiteNavHeight)(globalVars_1.siteNav.changeOrGetHeight());
    (0, globalVars_1.setHeaderHightInner)(globalVars_1.siteHeader.changeOrGetHeight());
    (0, globalVars_1.setHeaderHight)(globalVars_1.headerHightInner + (0, dom_1.$dom)('#waves').changeOrGetHeight());
    if (globalVars_1.oWinWidth !== window.innerWidth) {
        (0, sidebar_1.sideBarToggleHandle)(null, 1);
    }
    (0, globalVars_1.setOWinHeight)(window.innerHeight);
    (0, globalVars_1.setOWinWidth)(window.innerWidth);
};
exports.resizeHandle = resizeHandle;
const scrollHandle = () => {
    const winHeight = window.innerHeight;
    const docHeight = (0, dom_1.getDocHeight)();
    const contentVisibilityHeight = docHeight > winHeight ? docHeight - winHeight : document.body.scrollHeight - winHeight;
    const SHOW = window.scrollY > globalVars_1.headerHightInner;
    const startScroll = window.scrollY > 0;
    if (SHOW) {
        (0, themeColor_1.changeMetaTheme)('#FFF');
    }
    else {
        (0, themeColor_1.changeMetaTheme)('#222');
    }
    globalVars_1.siteNav.toggleClass('show', SHOW);
    globalVars_1.toolBtn.toggleClass('affix', startScroll);
    globalVars_1.siteBrand.toggleClass('affix', startScroll);
    globalVars_1.sideBar.toggleClass('affix', window.scrollY > globalVars_1.headerHight && document.body.offsetWidth > 991);
    if (typeof globalVars_1.scrollAction.y === 'undefined') {
        globalVars_1.scrollAction.y = window.scrollY;
    }
    (0, globalVars_1.setDiffY)(globalVars_1.scrollAction.y - window.scrollY);
    if (globalVars_1.diffY < 0) {
        globalVars_1.siteNav.removeClass('up');
        globalVars_1.siteNav.toggleClass('down', SHOW);
    }
    else if (globalVars_1.diffY > 0) {
        globalVars_1.siteNav.removeClass('down');
        globalVars_1.siteNav.toggleClass('up', SHOW);
    }
    else { }
    globalVars_1.scrollAction.y = window.scrollY;
    const scrollPercent = Math.round(Math.min(100 * window.scrollY / contentVisibilityHeight, 100)) + '%';
    if (globalVars_1.backToTop.child('span').innerText !== scrollPercent) {
        globalVars_1.backToTop.child('span').innerText = scrollPercent;
    }
    if ((0, dom_1.$dom)('#sidebar').hasClass('affix') || (0, dom_1.$dom)('#sidebar').hasClass('on')) {
        (0, dom_1.$dom)('.percent').changeOrGetWidth(scrollPercent);
    }
};
exports.scrollHandle = scrollHandle;
const clickMenu = () => {
    const menuElement = (0, dom_1.$dom)('#clickMenu');
    window.oncontextmenu = function (event) {
        if (event.ctrlKey) {
            return;
        }
        event.preventDefault();
        let x = event.offsetX;
        let y = event.offsetY;
        const winWidth = window.innerWidth;
        const winHeight = window.innerHeight;
        const menuWidth = menuElement.offsetWidth;
        const menuHeight = menuElement.offsetHeight;
        x = winWidth - menuWidth >= x ? x : winWidth - menuWidth;
        y = winHeight - menuHeight >= y ? y : winHeight - menuHeight;
        menuElement.style.top = y + 'px';
        menuElement.style.left = x + 'px';
        menuElement.classList.add('active');
        dom_1.$dom.each('.clickSubmenu', (submenu) => {
            if (x > (winWidth - menuWidth - submenu.offsetWidth)) {
                submenu.style.left = '-200px';
            }
            else {
                submenu.style.left = '';
                submenu.style.right = '-200px';
            }
        });
    };
    window.addEventListener('click', () => {
        menuElement.classList.remove('active');
    });
};
exports.clickMenu = clickMenu;
const visibilityListener = () => {
    const iconNode = (0, dom_1.$dom)('[rel="icon"]');
    document.addEventListener('visibilitychange', () => {
        switch (document.visibilityState) {
            case 'hidden':
                iconNode.attr('href', globalVars_1.statics + CONFIG.favicon.hidden);
                document.title = LOCAL.favicon.hide;
                if (CONFIG.loader.switch) {
                    thirdparty_1.Loader.show();
                }
                clearTimeout(globalVars_1.titleTime);
                break;
            case 'visible':
                iconNode.attr('href', globalVars_1.statics + CONFIG.favicon.normal);
                document.title = LOCAL.favicon.show;
                if (CONFIG.loader.switch) {
                    thirdparty_1.Loader.hide(1000);
                }
                (0, globalVars_1.setTitleTime)(setTimeout(() => {
                    document.title = globalVars_1.originTitle;
                }, 2000));
                break;
        }
    });
};
exports.visibilityListener = visibilityListener;
